============================================================
          INICIANDO COLETA DE DADOS DE DIAGNÓSTICO
============================================================

AVISO IMPORTANTE: O conteúdo do arquivo .env será exibido.
Revise a saída e REMOVA QUAISQUER SENHAS OU CHAVES SECRETAS
antes de compartilhar o resultado.

==================== 1. VERSÕES DO DOCKER ====================
Docker version 27.5.1, build 27.5.1-0ubuntu3~22.04.2
docker-compose version 1.29.2, build unknown

==================== 2. STATUS DOS CONTÊINERES ================
CONTAINER ID   IMAGE                COMMAND                  CREATED         STATUS                     PORTS                                                                                      NAMES
3630c6e10ed4   projeto-sissup_web   "bash -c 'python man…"   6 minutes ago   Exited (1) 6 minutes ago                                                                                              projeto-sissup_web_1
48a5c93eb838   postgres:16-alpine   "docker-entrypoint.s…"   6 minutes ago   Up 6 minutes               0.0.0.0:5432->5432/tcp, :::5432->5432/tcp                                                  projeto-sissup_db_1
b1900a929f43   minio/minio:latest   "/usr/bin/docker-ent…"   6 minutes ago   Up 6 minutes               0.0.0.0:9090->9000/tcp, [::]:9090->9000/tcp, 0.0.0.0:9091->9001/tcp, [::]:9091->9001/tcp   projeto-sissup_minio_1

==================== 3. LOGS DO SERVIÇO 'web' ================
Attaching to projeto-sissup_web_1
web_1    | System check identified some issues:
web_1    | 
web_1    | WARNINGS:
web_1    | ?: (staticfiles.W004) The directory '/app/static' in the STATICFILES_DIRS setting does not exist.
web_1    | Traceback (most recent call last):
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/db/backends/base/base.py", line 279, in ensure_connection
web_1    |     self.connect()
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/utils/asyncio.py", line 26, in inner
web_1    |     return func(*args, **kwargs)
web_1    |            ^^^^^^^^^^^^^^^^^^^^^
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/db/backends/base/base.py", line 256, in connect
web_1    |     self.connection = self.get_new_connection(conn_params)
web_1    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/utils/asyncio.py", line 26, in inner
web_1    |     return func(*args, **kwargs)
web_1    |            ^^^^^^^^^^^^^^^^^^^^^
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/db/backends/postgresql/base.py", line 332, in get_new_connection
web_1    |     connection = self.Database.connect(**conn_params)
web_1    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
web_1    |   File "/usr/local/lib/python3.12/site-packages/psycopg/connection.py", line 118, in connect
web_1    |     raise last_ex.with_traceback(None)
web_1    | psycopg.OperationalError: connection failed: connection to server at "172.18.0.3", port 5432 failed: Connection refused
web_1    | 	Is the server running on that host and accepting TCP/IP connections?
web_1    | 
web_1    | The above exception was the direct cause of the following exception:
web_1    | 
web_1    | Traceback (most recent call last):
web_1    |   File "/app/manage.py", line 22, in <module>
web_1    |     main()
web_1    |   File "/app/manage.py", line 18, in main
web_1    |     execute_from_command_line(sys.argv)
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/core/management/__init__.py", line 442, in execute_from_command_line
web_1    |     utility.execute()
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/core/management/__init__.py", line 436, in execute
web_1    |     self.fetch_command(subcommand).run_from_argv(self.argv)
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/core/management/base.py", line 416, in run_from_argv
web_1    |     self.execute(*args, **cmd_options)
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/core/management/base.py", line 460, in execute
web_1    |     output = self.handle(*args, **options)
web_1    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/core/management/base.py", line 107, in wrapper
web_1    |     res = handle_func(*args, **kwargs)
web_1    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/core/management/commands/migrate.py", line 114, in handle
web_1    |     executor = MigrationExecutor(connection, self.migration_progress_callback)
web_1    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/db/migrations/executor.py", line 18, in __init__
web_1    |     self.loader = MigrationLoader(self.connection)
web_1    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/db/migrations/loader.py", line 58, in __init__
web_1    |     self.build_graph()
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/db/migrations/loader.py", line 235, in build_graph
web_1    |     self.applied_migrations = recorder.applied_migrations()
web_1    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/db/migrations/recorder.py", line 89, in applied_migrations
web_1    |     if self.has_table():
web_1    |        ^^^^^^^^^^^^^^^^
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/db/migrations/recorder.py", line 63, in has_table
web_1    |     with self.connection.cursor() as cursor:
web_1    |          ^^^^^^^^^^^^^^^^^^^^^^^^
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/utils/asyncio.py", line 26, in inner
web_1    |     return func(*args, **kwargs)
web_1    |            ^^^^^^^^^^^^^^^^^^^^^
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/db/backends/base/base.py", line 320, in cursor
web_1    |     return self._cursor()
web_1    |            ^^^^^^^^^^^^^^
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/db/backends/base/base.py", line 296, in _cursor
web_1    |     self.ensure_connection()
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/utils/asyncio.py", line 26, in inner
web_1    |     return func(*args, **kwargs)
web_1    |            ^^^^^^^^^^^^^^^^^^^^^
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/db/backends/base/base.py", line 278, in ensure_connection
web_1    |     with self.wrap_database_errors:
web_1    |          ^^^^^^^^^^^^^^^^^^^^^^^^^
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/db/utils.py", line 91, in __exit__
web_1    |     raise dj_exc_value.with_traceback(traceback) from exc_value
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/db/backends/base/base.py", line 279, in ensure_connection
web_1    |     self.connect()
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/utils/asyncio.py", line 26, in inner
web_1    |     return func(*args, **kwargs)
web_1    |            ^^^^^^^^^^^^^^^^^^^^^
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/db/backends/base/base.py", line 256, in connect
web_1    |     self.connection = self.get_new_connection(conn_params)
web_1    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/utils/asyncio.py", line 26, in inner
web_1    |     return func(*args, **kwargs)
web_1    |            ^^^^^^^^^^^^^^^^^^^^^
web_1    |   File "/usr/local/lib/python3.12/site-packages/django/db/backends/postgresql/base.py", line 332, in get_new_connection
web_1    |     connection = self.Database.connect(**conn_params)
web_1    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
web_1    |   File "/usr/local/lib/python3.12/site-packages/psycopg/connection.py", line 118, in connect
web_1    |     raise last_ex.with_traceback(None)
web_1    | django.db.utils.OperationalError: connection failed: connection to server at "172.18.0.3", port 5432 failed: Connection refused
web_1    | 	Is the server running on that host and accepting TCP/IP connections?

==================== 4. ESTRUTURA DE ARQUIVOS ================
.
├── context_output.txt
├── debug_context.sh
├── djangoapp
│   ├── accounts
│   │   ├── admin.py
│   │   ├── apps.py
│   │   ├── __init__.py
│   │   ├── migrations
│   │   │   └── __init__.py
│   │   ├── models.py
│   │   ├── tests.py
│   │   └── views.py
│   ├── audit
│   │   ├── admin.py
│   │   ├── apps.py
│   │   ├── __init__.py
│   │   ├── migrations
│   │   │   └── __init__.py
│   │   ├── models.py
│   │   ├── tests.py
│   │   └── views.py
│   ├── billing
│   │   ├── admin.py
│   │   ├── apps.py
│   │   ├── __init__.py
│   │   ├── migrations
│   │   │   └── __init__.py
│   │   ├── models.py
│   │   ├── tests.py
│   │   └── views.py
│   ├── dialysis
│   │   ├── admin.py
│   │   ├── apps.py
│   │   ├── __init__.py
│   │   ├── migrations
│   │   │   └── __init__.py
│   │   ├── models.py
│   │   ├── tests.py
│   │   └── views.py
│   ├── Dockerfile
│   ├── documents
│   │   ├── admin.py
│   │   ├── apps.py
│   │   ├── __init__.py
│   │   ├── migrations
│   │   │   └── __init__.py
│   │   ├── models.py
│   │   ├── tests.py
│   │   └── views.py
│   ├── manage.py
│   ├── project
│   │   ├── asgi.py
│   │   ├── __init__.py
│   │   ├── settings.py
│   │   ├── urls.py
│   │   └── wsgi.py
│   └── requirements.txt
├── docker-compose.yml
└── README.MD

12 directories, 47 files

==================== 5. CONTEÚDO DOS ARQUIVOS DE CONFIGURAÇÃO ================
-------------------- Conteúdo de: docker-compose.yml --------------------
version: '3.9'

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    ports:
      - "9090:9000"
      - "9091:9001"

  web:
    build: ./djangoapp
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    
    env_file:
      - .env
      
    volumes:
      - ./djangoapp:/app
      
    ports:
      - "8001:8000"
      
    depends_on:
      - db
      - minio

volumes:
  pg_data:
  minio_data:
-------------------- Conteúdo de: .env --------------------
!!! ATENÇÃO: REVISE E REMOVA SEGREDOS DESTE BLOCO !!!
DJANGO_SECRET_KEY="#i8db9e%*$4a7=v9!%&2r1gj8bijn*0pt-y1k_%k*hl@b1iqqz"

DJANGO_DEBUG=1

ALLOWED_HOSTS="127.0.0.1,localhost"

POSTGRES_DB=SISSUP_db
POSTGRES_USER=Gabryel
POSTGRES_PASSWORD='Gabryel123$'

DATABASE_URL="postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}"

MINIO_ROOT_USER=Gabryel
MINIO_ROOT_PASSWORD='Gabryel123$'

MINIO_ENDPOINT=minio:9000
MINIO_BUCKET_DOCS=docs
MINIO_BUCKET_APAC=apac
-------------------- Conteúdo de: djangoapp/Dockerfile --------------------
FROM python:3.12-slim
WORKDIR /app
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1
RUN apt-get update && apt-get install -y build-essential libpq-dev && rm -rf /var/lib/apt/lists/*
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt
COPY . .
-------------------- Conteúdo de: djangoapp/requirements.txt --------------------
Django>=5.0
psycopg[binary]
django-environ
environ
boto3
minio
django-storages
python-dateutil
-------------------- Conteúdo de: djangoapp/project/settings.py --------------------
# app/core/settings.py

import environ
from pathlib import Path

# Configuração do django-environ
env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)

# Caminho base do projeto
BASE_DIR = Path(__file__).resolve().parent.parent

# Lendo o arquivo .env
environ.Env.read_env(BASE_DIR.parent / '.env')

# --- Variáveis de Segurança ---
SECRET_KEY = env('DJANGO_SECRET_KEY')
DEBUG = env('DJANGO_DEBUG')
ALLOWED_HOSTS = env.list('ALLOWED_HOSTS', default=['localhost', '127.0.0.1'])

# --- Definição das Aplicações ---
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Nossos apps (essencial adicioná-los aqui)
    'accounts',
    'documents',
    'dialysis',
    'billing',
    'audit',

    # Libs de terceiros
    'storages',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Assumindo que o nome do projeto é 'core'
ROOT_URLCONF = 'project.urls'
WSGI_APPLICATION = 'project.wsgi.application'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'], # Pasta para templates globais
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# --- Configuração do Banco de Dados ---
# django-environ lê a variável DATABASE_URL do .env e configura tudo
DATABASES = {
    'default': env.db(),
}

# --- Validação de Senhas ---
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# --- Internacionalização ---
LANGUAGE_CODE = 'pt-br'
TIME_ZONE = 'America/Sao_Paulo'
USE_I18N = True
USE_TZ = True

# --- Arquivos Estáticos e de Mídia ---
STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / 'static']

# --- Configuração do Armazenamento com MinIO ---
# Define o MinIO como o local padrão para salvar TODOS os arquivos
DEFAULT_FILE_STORAGE = 'documents.storage.MinioMediaStorage'

# Variáveis lidas do .env para configurar a conexão com o MinIO
MINIO_ENDPOINT = env('MINIO_ENDPOINT')
MINIO_ACCESS_KEY = env('MINIO_ROOT_USER') # Usando as credenciais root
MINIO_SECRET_KEY = env('MINIO_ROOT_PASSWORD')
MINIO_BUCKET_DOCS = env('MINIO_BUCKET_DOCS')
MINIO_BUCKET_APAC = env('MINIO_BUCKET_APAC')
MINIO_USE_HTTPS = False # Em desenvolvimento, usamos HTTP

# --- Tipo de Chave Primária Padrão ---
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
-------------------- Conteúdo de: djangoapp/project/urls.py --------------------
"""
URL configuration for project project.

The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/5.2/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  path('', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
Including another URLconf
    1. Import the include() function: from django.urls import include, path
    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
"""
from django.contrib import admin
from django.urls import path

urlpatterns = [
    path('admin/', admin.site.urls),
]

============================================================
                   COLETA DE DADOS CONCLUÍDA
============================================================
Por favor, copie toda a saída acima, revise o conteúdo do
.env para remover segredos e compartilhe para análise.

